name: Java CI Pipeline with Maven

on: [ push, pull_request ]

env:
  COMMIT_REGEX: ^(Initial commit|Merge.*)$|^((build|chore|ci|conf|docs|feat|fix|perf|refactor|revert|style|test)\(WBCI\-[0-9]{2,4}\):.*)$

jobs:
  # Checks whether the commit message corresponds to the conventional commits
  # https://www.conventionalcommits.org/en/v1.0.0/
  commit-message-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Validate commit messages
        run: |
          commit_regex="$COMMIT_REGEX"
          for commit in $(git rev-list --no-merges HEAD); do
            message=$(git log --format=%B -n 1 $commit)
            if ! [[ $message =~ $commit_regex ]]; then 
              echo "Invalid commit message: $message"
              exit 1
            fi
          done

#  test:
#    runs-on: ubuntu-latest
#    needs: commit-message-validation
#    steps:
#      - uses: actions/checkout@v4
#      - name: Set up JDK 21
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'zulu'
#          java-version: 21
#
#      - name: Test with Maven
#        run: mvn test

  semantic-release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: commit-message-validation
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: |
          npm install -g \
          semantic-release  \
          @semantic-release/git  \
          @semantic-release/github  \
          @semantic-release/changelog  \
          @semantic-release/exec \
          @semantic-release/commit-analyzer \
          @semantic-release/release-notes-generator \
          conventional-changelog-conventionalcommits
      - name: Semantic Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --branches main
      - name: Upload new version
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: version.txt

  set-version:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: semantic-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21
      - name: Download new version
        uses: actions/download-artifact@v4
        with:
          name: version
          path: ./
      - name: Set new version pom.xml
        run: |
          git pull
          mvn versions:set -DnewVersion=$(cat version.txt)
          git add *pom.xml
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -m "ci: set version to $(cat version.txt)"
          git push

#  publish-package:
#    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#    needs: set-version
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - name: Set up JDK 21
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'zulu'
#          java-version: 21
#          server-id: conology-github-packages # Value of the distributionManagement/repository/id field of the pom.xml
#          settings-path: ${{ github.workspace }} # location for the settings.xml file
#      - name: Publish to GitHub Packages Apache Maven
#        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
